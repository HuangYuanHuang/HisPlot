//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HanaTechHisPlot.HanaTechRTDBWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValueList", Namespace="http://schemas.datacontract.org/2004/07/HanaTech.WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class TagValueList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 位号值Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 位号值时间Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 位号名称Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 可信度Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 描述Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 服务器名称Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 位号值 {
            get {
                return this.位号值Field;
            }
            set {
                if ((object.ReferenceEquals(this.位号值Field, value) != true)) {
                    this.位号值Field = value;
                    this.RaisePropertyChanged("位号值");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 位号值时间 {
            get {
                return this.位号值时间Field;
            }
            set {
                if ((object.ReferenceEquals(this.位号值时间Field, value) != true)) {
                    this.位号值时间Field = value;
                    this.RaisePropertyChanged("位号值时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 位号名称 {
            get {
                return this.位号名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.位号名称Field, value) != true)) {
                    this.位号名称Field = value;
                    this.RaisePropertyChanged("位号名称");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 可信度 {
            get {
                return this.可信度Field;
            }
            set {
                if ((object.ReferenceEquals(this.可信度Field, value) != true)) {
                    this.可信度Field = value;
                    this.RaisePropertyChanged("可信度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 描述 {
            get {
                return this.描述Field;
            }
            set {
                if ((object.ReferenceEquals(this.描述Field, value) != true)) {
                    this.描述Field = value;
                    this.RaisePropertyChanged("描述");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 服务器名称 {
            get {
                return this.服务器名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.服务器名称Field, value) != true)) {
                    this.服务器名称Field = value;
                    this.RaisePropertyChanged("服务器名称");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagProperty", Namespace="http://schemas.datacontract.org/2004/07/HanaTech.WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class TagProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ACKNOWLEDGEMENTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ALARM_FORMATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ALARM_STATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DC_MAX_TIME_INTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DC_SIGNIFICANCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DC_SLOPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DC_STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEVICE_TABLEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENG_UNITSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GRAPH_MAXIMUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GRAPH_MINIMUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIGH_HIGH_LIMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIGH_LIMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INPUT_QUALITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INPUT_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INPUT_VALUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LIMIT_DEADBANDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOW_LIMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOW_LOW_LIMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MESSAGE_SWITCHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARENT_TAGNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PLANT_AREAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRC_COLLECTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRC_SCANSECSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRC_TAGNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STEPPEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TREND_VIEW_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUE_FORMATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUE_QUALITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUE_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 位号名称Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 描述Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 服务器名称Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACKNOWLEDGEMENT {
            get {
                return this.ACKNOWLEDGEMENTField;
            }
            set {
                if ((object.ReferenceEquals(this.ACKNOWLEDGEMENTField, value) != true)) {
                    this.ACKNOWLEDGEMENTField = value;
                    this.RaisePropertyChanged("ACKNOWLEDGEMENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ALARM_FORMAT {
            get {
                return this.ALARM_FORMATField;
            }
            set {
                if ((object.ReferenceEquals(this.ALARM_FORMATField, value) != true)) {
                    this.ALARM_FORMATField = value;
                    this.RaisePropertyChanged("ALARM_FORMAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ALARM_STATE {
            get {
                return this.ALARM_STATEField;
            }
            set {
                if ((object.ReferenceEquals(this.ALARM_STATEField, value) != true)) {
                    this.ALARM_STATEField = value;
                    this.RaisePropertyChanged("ALARM_STATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DC_MAX_TIME_INT {
            get {
                return this.DC_MAX_TIME_INTField;
            }
            set {
                if ((object.ReferenceEquals(this.DC_MAX_TIME_INTField, value) != true)) {
                    this.DC_MAX_TIME_INTField = value;
                    this.RaisePropertyChanged("DC_MAX_TIME_INT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DC_SIGNIFICANCE {
            get {
                return this.DC_SIGNIFICANCEField;
            }
            set {
                if ((object.ReferenceEquals(this.DC_SIGNIFICANCEField, value) != true)) {
                    this.DC_SIGNIFICANCEField = value;
                    this.RaisePropertyChanged("DC_SIGNIFICANCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DC_SLOPE {
            get {
                return this.DC_SLOPEField;
            }
            set {
                if ((object.ReferenceEquals(this.DC_SLOPEField, value) != true)) {
                    this.DC_SLOPEField = value;
                    this.RaisePropertyChanged("DC_SLOPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DC_STATUS {
            get {
                return this.DC_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.DC_STATUSField, value) != true)) {
                    this.DC_STATUSField = value;
                    this.RaisePropertyChanged("DC_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEVICE_TABLE {
            get {
                return this.DEVICE_TABLEField;
            }
            set {
                if ((object.ReferenceEquals(this.DEVICE_TABLEField, value) != true)) {
                    this.DEVICE_TABLEField = value;
                    this.RaisePropertyChanged("DEVICE_TABLE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENG_UNITS {
            get {
                return this.ENG_UNITSField;
            }
            set {
                if ((object.ReferenceEquals(this.ENG_UNITSField, value) != true)) {
                    this.ENG_UNITSField = value;
                    this.RaisePropertyChanged("ENG_UNITS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GRAPH_MAXIMUM {
            get {
                return this.GRAPH_MAXIMUMField;
            }
            set {
                if ((object.ReferenceEquals(this.GRAPH_MAXIMUMField, value) != true)) {
                    this.GRAPH_MAXIMUMField = value;
                    this.RaisePropertyChanged("GRAPH_MAXIMUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GRAPH_MINIMUM {
            get {
                return this.GRAPH_MINIMUMField;
            }
            set {
                if ((object.ReferenceEquals(this.GRAPH_MINIMUMField, value) != true)) {
                    this.GRAPH_MINIMUMField = value;
                    this.RaisePropertyChanged("GRAPH_MINIMUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HIGH_HIGH_LIMIT {
            get {
                return this.HIGH_HIGH_LIMITField;
            }
            set {
                if ((object.ReferenceEquals(this.HIGH_HIGH_LIMITField, value) != true)) {
                    this.HIGH_HIGH_LIMITField = value;
                    this.RaisePropertyChanged("HIGH_HIGH_LIMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HIGH_LIMIT {
            get {
                return this.HIGH_LIMITField;
            }
            set {
                if ((object.ReferenceEquals(this.HIGH_LIMITField, value) != true)) {
                    this.HIGH_LIMITField = value;
                    this.RaisePropertyChanged("HIGH_LIMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPUT_QUALITY {
            get {
                return this.INPUT_QUALITYField;
            }
            set {
                if ((object.ReferenceEquals(this.INPUT_QUALITYField, value) != true)) {
                    this.INPUT_QUALITYField = value;
                    this.RaisePropertyChanged("INPUT_QUALITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPUT_TIME {
            get {
                return this.INPUT_TIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.INPUT_TIMEField, value) != true)) {
                    this.INPUT_TIMEField = value;
                    this.RaisePropertyChanged("INPUT_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPUT_VALUE {
            get {
                return this.INPUT_VALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.INPUT_VALUEField, value) != true)) {
                    this.INPUT_VALUEField = value;
                    this.RaisePropertyChanged("INPUT_VALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LIMIT_DEADBAND {
            get {
                return this.LIMIT_DEADBANDField;
            }
            set {
                if ((object.ReferenceEquals(this.LIMIT_DEADBANDField, value) != true)) {
                    this.LIMIT_DEADBANDField = value;
                    this.RaisePropertyChanged("LIMIT_DEADBAND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOW_LIMIT {
            get {
                return this.LOW_LIMITField;
            }
            set {
                if ((object.ReferenceEquals(this.LOW_LIMITField, value) != true)) {
                    this.LOW_LIMITField = value;
                    this.RaisePropertyChanged("LOW_LIMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOW_LOW_LIMIT {
            get {
                return this.LOW_LOW_LIMITField;
            }
            set {
                if ((object.ReferenceEquals(this.LOW_LOW_LIMITField, value) != true)) {
                    this.LOW_LOW_LIMITField = value;
                    this.RaisePropertyChanged("LOW_LOW_LIMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MESSAGE_SWITCH {
            get {
                return this.MESSAGE_SWITCHField;
            }
            set {
                if ((object.ReferenceEquals(this.MESSAGE_SWITCHField, value) != true)) {
                    this.MESSAGE_SWITCHField = value;
                    this.RaisePropertyChanged("MESSAGE_SWITCH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENT_TAGNAME {
            get {
                return this.PARENT_TAGNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENT_TAGNAMEField, value) != true)) {
                    this.PARENT_TAGNAMEField = value;
                    this.RaisePropertyChanged("PARENT_TAGNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLANT_AREA {
            get {
                return this.PLANT_AREAField;
            }
            set {
                if ((object.ReferenceEquals(this.PLANT_AREAField, value) != true)) {
                    this.PLANT_AREAField = value;
                    this.RaisePropertyChanged("PLANT_AREA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRC_COLLECTOR {
            get {
                return this.SRC_COLLECTORField;
            }
            set {
                if ((object.ReferenceEquals(this.SRC_COLLECTORField, value) != true)) {
                    this.SRC_COLLECTORField = value;
                    this.RaisePropertyChanged("SRC_COLLECTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRC_SCANSECS {
            get {
                return this.SRC_SCANSECSField;
            }
            set {
                if ((object.ReferenceEquals(this.SRC_SCANSECSField, value) != true)) {
                    this.SRC_SCANSECSField = value;
                    this.RaisePropertyChanged("SRC_SCANSECS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRC_TAGNAME {
            get {
                return this.SRC_TAGNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SRC_TAGNAMEField, value) != true)) {
                    this.SRC_TAGNAMEField = value;
                    this.RaisePropertyChanged("SRC_TAGNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STEPPED {
            get {
                return this.STEPPEDField;
            }
            set {
                if ((object.ReferenceEquals(this.STEPPEDField, value) != true)) {
                    this.STEPPEDField = value;
                    this.RaisePropertyChanged("STEPPED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TREND_VIEW_TIME {
            get {
                return this.TREND_VIEW_TIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TREND_VIEW_TIMEField, value) != true)) {
                    this.TREND_VIEW_TIMEField = value;
                    this.RaisePropertyChanged("TREND_VIEW_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUE {
            get {
                return this.VALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEField, value) != true)) {
                    this.VALUEField = value;
                    this.RaisePropertyChanged("VALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUE_FORMAT {
            get {
                return this.VALUE_FORMATField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUE_FORMATField, value) != true)) {
                    this.VALUE_FORMATField = value;
                    this.RaisePropertyChanged("VALUE_FORMAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUE_QUALITY {
            get {
                return this.VALUE_QUALITYField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUE_QUALITYField, value) != true)) {
                    this.VALUE_QUALITYField = value;
                    this.RaisePropertyChanged("VALUE_QUALITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUE_TIME {
            get {
                return this.VALUE_TIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUE_TIMEField, value) != true)) {
                    this.VALUE_TIMEField = value;
                    this.RaisePropertyChanged("VALUE_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 位号名称 {
            get {
                return this.位号名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.位号名称Field, value) != true)) {
                    this.位号名称Field = value;
                    this.RaisePropertyChanged("位号名称");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 描述 {
            get {
                return this.描述Field;
            }
            set {
                if ((object.ReferenceEquals(this.描述Field, value) != true)) {
                    this.描述Field = value;
                    this.RaisePropertyChanged("描述");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 服务器名称 {
            get {
                return this.服务器名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.服务器名称Field, value) != true)) {
                    this.服务器名称Field = value;
                    this.RaisePropertyChanged("服务器名称");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryParam", Namespace="http://schemas.datacontract.org/2004/07/HanaTech.WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class QueryParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 位号名称Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int 周期Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 字段Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 开始日期Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int 排序Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 结束日期Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int 请求方式Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int 采样方式Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 位号名称 {
            get {
                return this.位号名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.位号名称Field, value) != true)) {
                    this.位号名称Field = value;
                    this.RaisePropertyChanged("位号名称");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int 周期 {
            get {
                return this.周期Field;
            }
            set {
                if ((this.周期Field.Equals(value) != true)) {
                    this.周期Field = value;
                    this.RaisePropertyChanged("周期");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 字段 {
            get {
                return this.字段Field;
            }
            set {
                if ((object.ReferenceEquals(this.字段Field, value) != true)) {
                    this.字段Field = value;
                    this.RaisePropertyChanged("字段");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 开始日期 {
            get {
                return this.开始日期Field;
            }
            set {
                if ((object.ReferenceEquals(this.开始日期Field, value) != true)) {
                    this.开始日期Field = value;
                    this.RaisePropertyChanged("开始日期");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int 排序 {
            get {
                return this.排序Field;
            }
            set {
                if ((this.排序Field.Equals(value) != true)) {
                    this.排序Field = value;
                    this.RaisePropertyChanged("排序");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 结束日期 {
            get {
                return this.结束日期Field;
            }
            set {
                if ((object.ReferenceEquals(this.结束日期Field, value) != true)) {
                    this.结束日期Field = value;
                    this.RaisePropertyChanged("结束日期");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int 请求方式 {
            get {
                return this.请求方式Field;
            }
            set {
                if ((this.请求方式Field.Equals(value) != true)) {
                    this.请求方式Field = value;
                    this.RaisePropertyChanged("请求方式");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int 采样方式 {
            get {
                return this.采样方式Field;
            }
            set {
                if ((this.采样方式Field.Equals(value) != true)) {
                    this.采样方式Field = value;
                    this.RaisePropertyChanged("采样方式");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HanaTechRTDBWebService.IRTDBService")]
    public interface IRTDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/GetTagList", ReplyAction="http://tempuri.org/IRTDBService/GetTagListResponse")]
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> GetTagList(System.Collections.Generic.List<string> strTagList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/GetTagList", ReplyAction="http://tempuri.org/IRTDBService/GetTagListResponse")]
        System.IAsyncResult BeginGetTagList(System.Collections.Generic.List<string> strTagList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndGetTagList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/GetTagProperty", ReplyAction="http://tempuri.org/IRTDBService/GetTagPropertyResponse")]
        HanaTechHisPlot.HanaTechRTDBWebService.TagProperty GetTagProperty(string strTagName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/GetTagProperty", ReplyAction="http://tempuri.org/IRTDBService/GetTagPropertyResponse")]
        System.IAsyncResult BeginGetTagProperty(string strTagName, System.AsyncCallback callback, object asyncState);
        
        HanaTechHisPlot.HanaTechRTDBWebService.TagProperty EndGetTagProperty(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/GetTagPropertyList", ReplyAction="http://tempuri.org/IRTDBService/GetTagPropertyListResponse")]
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> GetTagPropertyList(System.Collections.Generic.List<string> strTagName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/GetTagPropertyList", ReplyAction="http://tempuri.org/IRTDBService/GetTagPropertyListResponse")]
        System.IAsyncResult BeginGetTagPropertyList(System.Collections.Generic.List<string> strTagName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> EndGetTagPropertyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/FetchDataByTagValueList", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByTagValueListResponse")]
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByTagValueList(System.Collections.Generic.List<string> strTagName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/FetchDataByTagValueList", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByTagValueListResponse")]
        System.IAsyncResult BeginFetchDataByTagValueList(System.Collections.Generic.List<string> strTagName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByTagValueList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/FetchDataByQueryParam", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByQueryParamResponse")]
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByQueryParam(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/FetchDataByQueryParam", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByQueryParamResponse")]
        System.IAsyncResult BeginFetchDataByQueryParam(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByQueryParam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/FetchDataByQueryParamList", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByQueryParamListResponse")]
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByQueryParamList(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/FetchDataByQueryParamList", ReplyAction="http://tempuri.org/IRTDBService/FetchDataByQueryParamListResponse")]
        System.IAsyncResult BeginFetchDataByQueryParamList(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByQueryParamList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/GetTagProcessDataList", ReplyAction="http://tempuri.org/IRTDBService/GetTagProcessDataListResponse")]
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> GetTagProcessDataList(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/GetTagProcessDataList", ReplyAction="http://tempuri.org/IRTDBService/GetTagProcessDataListResponse")]
        System.IAsyncResult BeginGetTagProcessDataList(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> EndGetTagProcessDataList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRTDBService/GetTagProcessDataListByMap", ReplyAction="http://tempuri.org/IRTDBService/GetTagProcessDataListByMapResponse")]
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> GetTagProcessDataListByMap(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRTDBService/GetTagProcessDataListByMap", ReplyAction="http://tempuri.org/IRTDBService/GetTagProcessDataListByMapResponse")]
        System.IAsyncResult BeginGetTagProcessDataListByMap(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> EndGetTagProcessDataListByMap(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRTDBServiceChannel : HanaTechHisPlot.HanaTechRTDBWebService.IRTDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HanaTechHisPlot.HanaTechRTDBWebService.TagProperty Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HanaTechHisPlot.HanaTechRTDBWebService.TagProperty)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagPropertyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagPropertyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchDataByTagValueListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchDataByTagValueListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchDataByQueryParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchDataByQueryParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchDataByQueryParamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchDataByQueryParamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagProcessDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagProcessDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagProcessDataListByMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagProcessDataListByMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RTDBServiceClient : System.ServiceModel.ClientBase<HanaTechHisPlot.HanaTechRTDBWebService.IRTDBService>, HanaTechHisPlot.HanaTechRTDBWebService.IRTDBService {
        
        private BeginOperationDelegate onBeginGetTagListDelegate;
        
        private EndOperationDelegate onEndGetTagListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagPropertyDelegate;
        
        private EndOperationDelegate onEndGetTagPropertyDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagPropertyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagPropertyListDelegate;
        
        private EndOperationDelegate onEndGetTagPropertyListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagPropertyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchDataByTagValueListDelegate;
        
        private EndOperationDelegate onEndFetchDataByTagValueListDelegate;
        
        private System.Threading.SendOrPostCallback onFetchDataByTagValueListCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchDataByQueryParamDelegate;
        
        private EndOperationDelegate onEndFetchDataByQueryParamDelegate;
        
        private System.Threading.SendOrPostCallback onFetchDataByQueryParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchDataByQueryParamListDelegate;
        
        private EndOperationDelegate onEndFetchDataByQueryParamListDelegate;
        
        private System.Threading.SendOrPostCallback onFetchDataByQueryParamListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagProcessDataListDelegate;
        
        private EndOperationDelegate onEndGetTagProcessDataListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagProcessDataListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagProcessDataListByMapDelegate;
        
        private EndOperationDelegate onEndGetTagProcessDataListByMapDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagProcessDataListByMapCompletedDelegate;
        
        public RTDBServiceClient() {
        }
        
        public RTDBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RTDBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RTDBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RTDBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetTagListCompletedEventArgs> GetTagListCompleted;
        
        public event System.EventHandler<GetTagPropertyCompletedEventArgs> GetTagPropertyCompleted;
        
        public event System.EventHandler<GetTagPropertyListCompletedEventArgs> GetTagPropertyListCompleted;
        
        public event System.EventHandler<FetchDataByTagValueListCompletedEventArgs> FetchDataByTagValueListCompleted;
        
        public event System.EventHandler<FetchDataByQueryParamCompletedEventArgs> FetchDataByQueryParamCompleted;
        
        public event System.EventHandler<FetchDataByQueryParamListCompletedEventArgs> FetchDataByQueryParamListCompleted;
        
        public event System.EventHandler<GetTagProcessDataListCompletedEventArgs> GetTagProcessDataListCompleted;
        
        public event System.EventHandler<GetTagProcessDataListByMapCompletedEventArgs> GetTagProcessDataListByMapCompleted;
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> GetTagList(System.Collections.Generic.List<string> strTagList) {
            return base.Channel.GetTagList(strTagList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagList(System.Collections.Generic.List<string> strTagList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagList(strTagList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndGetTagList(System.IAsyncResult result) {
            return base.Channel.EndGetTagList(result);
        }
        
        private System.IAsyncResult OnBeginGetTagList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> strTagList = ((System.Collections.Generic.List<string>)(inValues[0]));
            return this.BeginGetTagList(strTagList, callback, asyncState);
        }
        
        private object[] OnEndGetTagList(System.IAsyncResult result) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> retVal = this.EndGetTagList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagListCompleted(object state) {
            if ((this.GetTagListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagListCompleted(this, new GetTagListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagListAsync(System.Collections.Generic.List<string> strTagList) {
            this.GetTagListAsync(strTagList, null);
        }
        
        public void GetTagListAsync(System.Collections.Generic.List<string> strTagList, object userState) {
            if ((this.onBeginGetTagListDelegate == null)) {
                this.onBeginGetTagListDelegate = new BeginOperationDelegate(this.OnBeginGetTagList);
            }
            if ((this.onEndGetTagListDelegate == null)) {
                this.onEndGetTagListDelegate = new EndOperationDelegate(this.OnEndGetTagList);
            }
            if ((this.onGetTagListCompletedDelegate == null)) {
                this.onGetTagListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagListDelegate, new object[] {
                        strTagList}, this.onEndGetTagListDelegate, this.onGetTagListCompletedDelegate, userState);
        }
        
        public HanaTechHisPlot.HanaTechRTDBWebService.TagProperty GetTagProperty(string strTagName) {
            return base.Channel.GetTagProperty(strTagName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagProperty(string strTagName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagProperty(strTagName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HanaTechHisPlot.HanaTechRTDBWebService.TagProperty EndGetTagProperty(System.IAsyncResult result) {
            return base.Channel.EndGetTagProperty(result);
        }
        
        private System.IAsyncResult OnBeginGetTagProperty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strTagName = ((string)(inValues[0]));
            return this.BeginGetTagProperty(strTagName, callback, asyncState);
        }
        
        private object[] OnEndGetTagProperty(System.IAsyncResult result) {
            HanaTechHisPlot.HanaTechRTDBWebService.TagProperty retVal = this.EndGetTagProperty(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagPropertyCompleted(object state) {
            if ((this.GetTagPropertyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagPropertyCompleted(this, new GetTagPropertyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagPropertyAsync(string strTagName) {
            this.GetTagPropertyAsync(strTagName, null);
        }
        
        public void GetTagPropertyAsync(string strTagName, object userState) {
            if ((this.onBeginGetTagPropertyDelegate == null)) {
                this.onBeginGetTagPropertyDelegate = new BeginOperationDelegate(this.OnBeginGetTagProperty);
            }
            if ((this.onEndGetTagPropertyDelegate == null)) {
                this.onEndGetTagPropertyDelegate = new EndOperationDelegate(this.OnEndGetTagProperty);
            }
            if ((this.onGetTagPropertyCompletedDelegate == null)) {
                this.onGetTagPropertyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagPropertyCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagPropertyDelegate, new object[] {
                        strTagName}, this.onEndGetTagPropertyDelegate, this.onGetTagPropertyCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> GetTagPropertyList(System.Collections.Generic.List<string> strTagName) {
            return base.Channel.GetTagPropertyList(strTagName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagPropertyList(System.Collections.Generic.List<string> strTagName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagPropertyList(strTagName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> EndGetTagPropertyList(System.IAsyncResult result) {
            return base.Channel.EndGetTagPropertyList(result);
        }
        
        private System.IAsyncResult OnBeginGetTagPropertyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> strTagName = ((System.Collections.Generic.List<string>)(inValues[0]));
            return this.BeginGetTagPropertyList(strTagName, callback, asyncState);
        }
        
        private object[] OnEndGetTagPropertyList(System.IAsyncResult result) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagProperty> retVal = this.EndGetTagPropertyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagPropertyListCompleted(object state) {
            if ((this.GetTagPropertyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagPropertyListCompleted(this, new GetTagPropertyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagPropertyListAsync(System.Collections.Generic.List<string> strTagName) {
            this.GetTagPropertyListAsync(strTagName, null);
        }
        
        public void GetTagPropertyListAsync(System.Collections.Generic.List<string> strTagName, object userState) {
            if ((this.onBeginGetTagPropertyListDelegate == null)) {
                this.onBeginGetTagPropertyListDelegate = new BeginOperationDelegate(this.OnBeginGetTagPropertyList);
            }
            if ((this.onEndGetTagPropertyListDelegate == null)) {
                this.onEndGetTagPropertyListDelegate = new EndOperationDelegate(this.OnEndGetTagPropertyList);
            }
            if ((this.onGetTagPropertyListCompletedDelegate == null)) {
                this.onGetTagPropertyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagPropertyListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagPropertyListDelegate, new object[] {
                        strTagName}, this.onEndGetTagPropertyListDelegate, this.onGetTagPropertyListCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByTagValueList(System.Collections.Generic.List<string> strTagName) {
            return base.Channel.FetchDataByTagValueList(strTagName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFetchDataByTagValueList(System.Collections.Generic.List<string> strTagName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchDataByTagValueList(strTagName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByTagValueList(System.IAsyncResult result) {
            return base.Channel.EndFetchDataByTagValueList(result);
        }
        
        private System.IAsyncResult OnBeginFetchDataByTagValueList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> strTagName = ((System.Collections.Generic.List<string>)(inValues[0]));
            return this.BeginFetchDataByTagValueList(strTagName, callback, asyncState);
        }
        
        private object[] OnEndFetchDataByTagValueList(System.IAsyncResult result) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> retVal = this.EndFetchDataByTagValueList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchDataByTagValueListCompleted(object state) {
            if ((this.FetchDataByTagValueListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchDataByTagValueListCompleted(this, new FetchDataByTagValueListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchDataByTagValueListAsync(System.Collections.Generic.List<string> strTagName) {
            this.FetchDataByTagValueListAsync(strTagName, null);
        }
        
        public void FetchDataByTagValueListAsync(System.Collections.Generic.List<string> strTagName, object userState) {
            if ((this.onBeginFetchDataByTagValueListDelegate == null)) {
                this.onBeginFetchDataByTagValueListDelegate = new BeginOperationDelegate(this.OnBeginFetchDataByTagValueList);
            }
            if ((this.onEndFetchDataByTagValueListDelegate == null)) {
                this.onEndFetchDataByTagValueListDelegate = new EndOperationDelegate(this.OnEndFetchDataByTagValueList);
            }
            if ((this.onFetchDataByTagValueListCompletedDelegate == null)) {
                this.onFetchDataByTagValueListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchDataByTagValueListCompleted);
            }
            base.InvokeAsync(this.onBeginFetchDataByTagValueListDelegate, new object[] {
                        strTagName}, this.onEndFetchDataByTagValueListDelegate, this.onFetchDataByTagValueListCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByQueryParam(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp) {
            return base.Channel.FetchDataByQueryParam(qp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFetchDataByQueryParam(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchDataByQueryParam(qp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByQueryParam(System.IAsyncResult result) {
            return base.Channel.EndFetchDataByQueryParam(result);
        }
        
        private System.IAsyncResult OnBeginFetchDataByQueryParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp = ((HanaTechHisPlot.HanaTechRTDBWebService.QueryParam)(inValues[0]));
            return this.BeginFetchDataByQueryParam(qp, callback, asyncState);
        }
        
        private object[] OnEndFetchDataByQueryParam(System.IAsyncResult result) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> retVal = this.EndFetchDataByQueryParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchDataByQueryParamCompleted(object state) {
            if ((this.FetchDataByQueryParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchDataByQueryParamCompleted(this, new FetchDataByQueryParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchDataByQueryParamAsync(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp) {
            this.FetchDataByQueryParamAsync(qp, null);
        }
        
        public void FetchDataByQueryParamAsync(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, object userState) {
            if ((this.onBeginFetchDataByQueryParamDelegate == null)) {
                this.onBeginFetchDataByQueryParamDelegate = new BeginOperationDelegate(this.OnBeginFetchDataByQueryParam);
            }
            if ((this.onEndFetchDataByQueryParamDelegate == null)) {
                this.onEndFetchDataByQueryParamDelegate = new EndOperationDelegate(this.OnEndFetchDataByQueryParam);
            }
            if ((this.onFetchDataByQueryParamCompletedDelegate == null)) {
                this.onFetchDataByQueryParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchDataByQueryParamCompleted);
            }
            base.InvokeAsync(this.onBeginFetchDataByQueryParamDelegate, new object[] {
                        qp}, this.onEndFetchDataByQueryParamDelegate, this.onFetchDataByQueryParamCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> FetchDataByQueryParamList(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList) {
            return base.Channel.FetchDataByQueryParamList(qpList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFetchDataByQueryParamList(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchDataByQueryParamList(qpList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> EndFetchDataByQueryParamList(System.IAsyncResult result) {
            return base.Channel.EndFetchDataByQueryParamList(result);
        }
        
        private System.IAsyncResult OnBeginFetchDataByQueryParamList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList = ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam>)(inValues[0]));
            return this.BeginFetchDataByQueryParamList(qpList, callback, asyncState);
        }
        
        private object[] OnEndFetchDataByQueryParamList(System.IAsyncResult result) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList> retVal = this.EndFetchDataByQueryParamList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchDataByQueryParamListCompleted(object state) {
            if ((this.FetchDataByQueryParamListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchDataByQueryParamListCompleted(this, new FetchDataByQueryParamListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchDataByQueryParamListAsync(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList) {
            this.FetchDataByQueryParamListAsync(qpList, null);
        }
        
        public void FetchDataByQueryParamListAsync(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, object userState) {
            if ((this.onBeginFetchDataByQueryParamListDelegate == null)) {
                this.onBeginFetchDataByQueryParamListDelegate = new BeginOperationDelegate(this.OnBeginFetchDataByQueryParamList);
            }
            if ((this.onEndFetchDataByQueryParamListDelegate == null)) {
                this.onEndFetchDataByQueryParamListDelegate = new EndOperationDelegate(this.OnEndFetchDataByQueryParamList);
            }
            if ((this.onFetchDataByQueryParamListCompletedDelegate == null)) {
                this.onFetchDataByQueryParamListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchDataByQueryParamListCompleted);
            }
            base.InvokeAsync(this.onBeginFetchDataByQueryParamListDelegate, new object[] {
                        qpList}, this.onEndFetchDataByQueryParamListDelegate, this.onFetchDataByQueryParamListCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> GetTagProcessDataList(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp) {
            return base.Channel.GetTagProcessDataList(qp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagProcessDataList(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagProcessDataList(qp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> EndGetTagProcessDataList(System.IAsyncResult result) {
            return base.Channel.EndGetTagProcessDataList(result);
        }
        
        private System.IAsyncResult OnBeginGetTagProcessDataList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp = ((HanaTechHisPlot.HanaTechRTDBWebService.QueryParam)(inValues[0]));
            return this.BeginGetTagProcessDataList(qp, callback, asyncState);
        }
        
        private object[] OnEndGetTagProcessDataList(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> retVal = this.EndGetTagProcessDataList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagProcessDataListCompleted(object state) {
            if ((this.GetTagProcessDataListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagProcessDataListCompleted(this, new GetTagProcessDataListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagProcessDataListAsync(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp) {
            this.GetTagProcessDataListAsync(qp, null);
        }
        
        public void GetTagProcessDataListAsync(HanaTechHisPlot.HanaTechRTDBWebService.QueryParam qp, object userState) {
            if ((this.onBeginGetTagProcessDataListDelegate == null)) {
                this.onBeginGetTagProcessDataListDelegate = new BeginOperationDelegate(this.OnBeginGetTagProcessDataList);
            }
            if ((this.onEndGetTagProcessDataListDelegate == null)) {
                this.onEndGetTagProcessDataListDelegate = new EndOperationDelegate(this.OnEndGetTagProcessDataList);
            }
            if ((this.onGetTagProcessDataListCompletedDelegate == null)) {
                this.onGetTagProcessDataListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagProcessDataListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagProcessDataListDelegate, new object[] {
                        qp}, this.onEndGetTagProcessDataListDelegate, this.onGetTagProcessDataListCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> GetTagProcessDataListByMap(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList) {
            return base.Channel.GetTagProcessDataListByMap(qpList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagProcessDataListByMap(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagProcessDataListByMap(qpList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> EndGetTagProcessDataListByMap(System.IAsyncResult result) {
            return base.Channel.EndGetTagProcessDataListByMap(result);
        }
        
        private System.IAsyncResult OnBeginGetTagProcessDataListByMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList = ((System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam>)(inValues[0]));
            return this.BeginGetTagProcessDataListByMap(qpList, callback, asyncState);
        }
        
        private object[] OnEndGetTagProcessDataListByMap(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.TagValueList>> retVal = this.EndGetTagProcessDataListByMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagProcessDataListByMapCompleted(object state) {
            if ((this.GetTagProcessDataListByMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagProcessDataListByMapCompleted(this, new GetTagProcessDataListByMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagProcessDataListByMapAsync(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList) {
            this.GetTagProcessDataListByMapAsync(qpList, null);
        }
        
        public void GetTagProcessDataListByMapAsync(System.Collections.Generic.List<HanaTechHisPlot.HanaTechRTDBWebService.QueryParam> qpList, object userState) {
            if ((this.onBeginGetTagProcessDataListByMapDelegate == null)) {
                this.onBeginGetTagProcessDataListByMapDelegate = new BeginOperationDelegate(this.OnBeginGetTagProcessDataListByMap);
            }
            if ((this.onEndGetTagProcessDataListByMapDelegate == null)) {
                this.onEndGetTagProcessDataListByMapDelegate = new EndOperationDelegate(this.OnEndGetTagProcessDataListByMap);
            }
            if ((this.onGetTagProcessDataListByMapCompletedDelegate == null)) {
                this.onGetTagProcessDataListByMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagProcessDataListByMapCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagProcessDataListByMapDelegate, new object[] {
                        qpList}, this.onEndGetTagProcessDataListByMapDelegate, this.onGetTagProcessDataListByMapCompletedDelegate, userState);
        }
    }
}
